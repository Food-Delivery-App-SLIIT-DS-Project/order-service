name: Deploy Order Service to K3s

on:
  push:
    branches:
      - main

env:
  IMAGE_NAME: mash02/order-service
  IMAGE_TAG: latest

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create namespace.yaml
        run: |
          cat <<EOF > namespace.yaml
          apiVersion: v1
          kind: Namespace
          metadata:
            name: order-service
          EOF

      - name: Write order-service-secret.yaml from GitHub Secret
        run: |
          echo "${{ secrets.ORDER_SERVICE_SECRET_YAML_BASE64 }}" | base64 -d > order-service-secret.yaml

      - name: Create order-service.yaml (Deployment + Service)
        shell: bash
        run: |
          cat <<EOF > order-service.yaml
          apiVersion: apps/v1
          kind: Deployment
          metadata:
            name: order-service
            namespace: order-service
            labels:
              app: order-service
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: order-service
            template:
              metadata:
                labels:
                  app: order-service
              spec:
                containers:
                  - name: order-service
                    image: ${IMAGE_NAME}:${IMAGE_TAG}
                    ports:
                      - containerPort: 50055
                    envFrom:
                      - secretRef:
                          name: order-service-secret
          ---
          apiVersion: v1
          kind: Service
          metadata:
            name: order-service
            namespace: order-service
          spec:
            selector:
              app: order-service
            ports:
              - protocol: TCP
                port: 50055
                targetPort: 50055
            type: ClusterIP
          EOF

      - name: Check generated files
        run: |
          ls -la
          echo "--- namespace.yaml ---" && cat namespace.yaml
          echo "--- order-service-secret.yaml ---" && cat order-service-secret.yaml
          echo "--- order-service.yaml ---" && cat order-service.yaml

      - name: Build and push Docker image
        run: |
          docker build -t $IMAGE_NAME:$IMAGE_TAG .
          docker push $IMAGE_NAME:$IMAGE_TAG

      - name: Install OpenSSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} 'echo "SSH connection successful"'

      - name: Deploy to EC2
        run: |
          ssh ubuntu@${{ secrets.EC2_HOST }} "mkdir -p ~/deploy/order-service"
          scp namespace.yaml order-service-secret.yaml order-service.yaml ubuntu@${{ secrets.EC2_HOST }}:~/deploy/order-service/
          ssh ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            cd ~/deploy/order-service
            sudo kubectl apply -f namespace.yaml
            sudo kubectl apply -f order-service-secret.yaml
            sudo kubectl apply -f order-service.yaml
          EOF
